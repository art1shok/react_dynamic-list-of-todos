{"version":3,"sources":["TodoItem.js","TodoList.js","Api.js","App.js","index.js"],"names":["TodoItem","_ref","todo","react_default","a","createElement","title","user","name","completed","TodoList","todos","map","item","key","id","src_TodoItem","getTodosFromServer","response","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsersFromServer","_context2","App","_useState","useState","_useState2","Object","slicedToArray","loadedTodos","setLoadedTodos","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","buttonStatus","setButtonStatus","_useState7","_useState8","selectedButtonIndex","setSelectedButtonIndex","className","type","onClick","_ref2","todosFromServer","usersFromServer","newTodos","Promise","all","objectSpread2","find","userId","Fragment","button","i","index","sortedTodos","toConsumableArray","reverse","sort","b","localeCompare","value","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6dc6d03.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo }) => (\n  <div>\n    <p>{todo.title}</p>\n    <p>\n      User:\n      {' '}\n      {todo.user.name}\n    </p>\n    {todo.completed\n      ? (\n        <p>Completed</p>\n      )\n      : (\n        <p>Not completed</p>\n      )}\n    <hr />\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <ol>\n    {todos.map(item => <li key={item.id}><TodoItem todo={item} /></li>)}\n  </ol>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","const URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\nconst URL_USERS = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodosFromServer = async() => {\n  const response = await fetch(URL_TODOS);\n\n  return response.json();\n};\n\nexport const getUsersFromServer = async() => {\n  const response = await fetch(URL_USERS);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { getTodosFromServer, getUsersFromServer } from './Api';\n\nfunction App() {\n  const [loadedTodos, setLoadedTodos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonStatus, setButtonStatus] = useState(true);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(-1);\n\n  const sortedButtons = ['Sort by user', 'Sort by title', 'Sort By Status'];\n\n  const handleLoading = async() => {\n    setIsLoading(true);\n\n    // eslint-disable-next-line max-len\n    const [todosFromServer, usersFromServer] = await Promise.all([getTodosFromServer(), getUsersFromServer()]);\n    const newTodos = todosFromServer.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    }));\n\n    setIsLoading(false);\n    setButtonStatus(false);\n\n    setLoadedTodos(newTodos);\n\n    return newTodos;\n  };\n\n  const sort = (index) => {\n    let sortedTodos = [];\n\n    if (selectedButtonIndex === index) {\n      setLoadedTodos([...loadedTodos].reverse());\n    } else {\n      switch (index) {\n        case 0:\n          sortedTodos = [...loadedTodos]\n            .sort((a, b) => (a.user.name.localeCompare(b.user.name)));\n          break;\n        case 1:\n          sortedTodos = [...loadedTodos]\n            .sort((a, b) => (a.title.localeCompare(b.title)));\n          break;\n        case 2:\n          sortedTodos = [...loadedTodos]\n            .sort((a, b) => (b.completed - a.completed));\n          break;\n        default:\n      }\n      setSelectedButtonIndex(index);\n      setLoadedTodos(sortedTodos);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <h1>Loading</h1>\n    );\n  }\n\n  return buttonStatus\n    ? (\n      <div>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handleLoading}\n        >\n          Load goods\n        </button>\n      </div>\n    )\n    : (\n      <>\n        <div>\n          {sortedButtons.map((button, i) => (\n            <button\n              type=\"button\"\n              className={selectedButtonIndex === i ? 'button active' : 'button'}\n              onClick={() => sort(i)}\n              value={i}\n            >\n              {button}\n            </button>\n          ))}\n        </div>\n        <div>\n          <TodoList todos={loadedTodos} />\n        </div>\n      </>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}